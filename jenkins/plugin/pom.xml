<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.jenkins-ci.plugins</groupId>
		<artifactId>plugin</artifactId>
		<version>2.7</version>
	</parent>

	<name>HPE ALM Octane CI Plugin</name>
	<version>12.53.16-SNAPSHOT</version>
	<artifactId>hp-lifecycle-management-ci-plugin</artifactId>
	<packaging>hpi</packaging>

	<properties>
		<baseNexusURL>http://mydtbld0051.hpeswlab.net:8081/nexus</baseNexusURL>
		<surefire.version>2.18.1</surefire.version>
		<jacoco.version>0.7.4.201502262128</jacoco.version>

		<!-- SONAR STUFF -->
		<sonar.jacoco.reportPath>${jacoco.report.path}/${jacoco.report.filename}</sonar.jacoco.reportPath>
		<sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>
		<sonar.java.source>${jdk.version}</sonar.java.source>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.forceAnalysis>true</sonar.forceAnalysis>
		<sonar.exclusions>
			**/src/test/**/*.java,
			**/*JSON.java,
			**/json/**,
			**/Json.java,
			**/*Json*.java,
			**/JsonTest.java,
			**/opb-tests/**,
			**/NotificationEmail.java
		</sonar.exclusions>
		<skipTests>true</skipTests>
		<jenkins-test-harness.version>2.14</jenkins-test-harness.version>
		<findbugs.skip>true</findbugs.skip>
		<surefireArgLine>-Xmx2G -Djava.awt.headless=true</surefireArgLine>

		<!-- signing-->
		<matching.obj>jarfile_batch_sign_local_timestamp</matching.obj>
		<file.name>${project.artifactId}.hpi</file.name>
		<original.folder>${project.build.directory}/temp</original.folder>
		<cert.project.name>jarAgm</cert.project.name>
	</properties>

	<dependencies>

		<!-- pipeline as a code dependencies (3) -->
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>branch-api</artifactId>
			<version>1.10</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>git-server</artifactId>
			<version>1.7</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins.pipeline-stage-view</groupId>
			<artifactId>pipeline-rest-api</artifactId>
			<version>1.7</version>
			<optional>true</optional>
		</dependency>

		<!-- pipeline as a code  ends here -->

		<dependency>
			<groupId>com.squareup</groupId>
			<artifactId>tape</artifactId>
			<version>1.2.3</version>
		</dependency>

		<!--Extensibility-->

		<dependency>
			<groupId>org.jenkins-ci.main</groupId>
			<artifactId>maven-plugin</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>git</artifactId>
			<version>2.2.7</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>matrix-project</artifactId>
			<version>1.4</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>jenkins-multijob-plugin</artifactId>
			<version>1.15</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>parameterized-trigger</artifactId>
			<version>2.25</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.seitenbau.jenkins.plugins</groupId>
			<artifactId>dynamicparameter</artifactId>
			<version>0.2.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>extended-choice-parameter</artifactId>
			<version>0.34</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>random-string-parameter</artifactId>
			<version>1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>nodelabelparameter</artifactId>
			<version>1.5.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>junit</artifactId>
			<version>1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>jquery</artifactId>
			<version>1.7.2-1</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>subversion</artifactId>
			<version>1.45</version>
			<optional>true</optional>
		</dependency>

		<!--Internals-->
		<dependency>
			<artifactId>integrations-sdk</artifactId>
			<groupId>com.hp.mqm</groupId>
			<version>${project.version}</version>
		</dependency>

		<!-- TO BE REMOVED -->
		<dependency>
			<artifactId>mqm-rest-client</artifactId>
			<groupId>com.hp.mqm</groupId>
			<version>${project.version}</version>
		</dependency>

		<!--Test-->

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20141113</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>9.2.6.v20141205</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>hp-application-automation-tools-plugin</artifactId>
			<version>3.0.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.main</groupId>
			<artifactId>jenkins-test-harness-tools</artifactId>
			<version>2.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jvnet.localizer</groupId>
				<artifactId>maven-localizer-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<fileMask>Messages.properties</fileMask>
							<outputDirectory>target/generated-sources/localizer</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire.version}</version>
					<configuration>
						<argLine>${surefireArgLine}</argLine>
						<skipTests>${skipTests}</skipTests>
						<testFailureIgnore>true</testFailureIgnore>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- This profile is for coverage unitests -->
		<profile>
			<id>test-coverage</id>
			<properties>
				<jacoco.report.filename>jacoco-ut.exec</jacoco.report.filename>
				<jacoco.report.path>${user.dir}/target/coverage-reports</jacoco.report.path>
				<jacoco.report.append>true</jacoco.report.append>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<pluginManagement>

					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>${jacoco.version}</version>
							<configuration>
								<destFile>${jacoco.report.path}/${jacoco.report.filename}</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
								<propertyName>surefireArgLine</propertyName>
								<append>${jacoco.report.append}</append>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>full</id>
			<distributionManagement>
				<repository>
					<id>mqm-latest</id>
					<name>Latest repository</name>
					<url>${baseNexusURL}/content/repositories/mqm-latest-dev</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>full-stage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.5.1</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>stage-indi</serverId>
							<stagingProfileId>3f945a89b73e3c</stagingProfileId>
							<buildPromotionProfileId>fccb50be7d1a</buildPromotionProfileId>
							<nexusUrl>${baseNexusURL}/</nexusUrl>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>quick</id>
			<distributionManagement>
				<snapshotRepository>
					<id>mqm-snapshots</id>
					<name>Snapshot repository</name>
					<url>${baseNexusURL}/content/repositories/mqm-snapshots</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>

		<profile>
			<id>jar-signing</id>
			<build>
				<defaultGoal>install</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>default-cli</id>
								<phase>post-integration-test</phase>
								<configuration>
									<target name="Sign">
										<echo message="This is the file name:${file.name}"/>
										<exec executable="/bin/bash" failonerror="true">
											<arg value="/opt/HPCSS/HPSignClient/HPSign.sh"/>
											<!--<arg value="-r jarAgm -c HPSign.conf -i /tmp/tmp/hp-integration-bridge-upgrade-windows.jar -o /tmp/tmp/Signed -obj jarfile_batch_sign_local_timestamp" />-->
											<arg value="-r ${cert.project.name} -c HPSign.conf -i ${project.build.directory}/${file.name} -o ${original.folder} -obj ${matching.obj}"/>
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>copy signed hpi to target</id>
								<phase>post-integration-test</phase>
								<configuration>
									<target>
										<copy file="${original.folder}/${file.name}"
											  toFile="${project.build.directory}/${file.name}"
											  overwrite="true">
										</copy>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>verify-signing</id>
								<phase>post-integration-test</phase>
								<configuration>
									<target name="Verify sign">
										<echo message="This is the file name:${file.name}"/>
										<exec executable="/bin/bash" failonerror="true">
											<arg value="-c"/>
											<arg value="if /usr/bin/jarsigner -verify ${project.build.directory}/${file.name} | grep 'jar verified.'; then echo THE JAR ${file.name} WAS SIGNED SUCCESSFULLY; exit 0; else echo THE BUILD FAILED BECAUSE JAR ${file.name} IS UNSIGNED; exit 1; fi"/>
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
